INCLUDE(CheckTypeSize)
CHECK_TYPE_SIZE (long LONG_SIZE)

IF(${LONG_SIZE} EQUAL 4)
    MESSAGE(STATUS 32bit-System)
ENDIF()

IF(${LONG_SIZE} EQUAL 8)
    MESSAGE(STATUS 64bit-System)
ENDIF()

OPTION(CLE "Compile as a command line executable" "OFF")
OPTION(TESTING "Testing toolkit" "OFF")

IF(${CMAKE_CXX_COMPILER_ID} STREQUAL GNU)
    MESSAGE(STATUS "Using GNU compilers")
    ADD_DEFINITIONS(-Wno-format-security -Wno-format)
    SET(LINKLIBS "-lm")
    SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Wl,--version-script=${CMAKE_CURRENT_SOURCE_DIR}/libepanet2.so.map")
ELSE()
    #ADD_DEFINITIONS(/D _CRT_SECURE_NO_WARNINGS)
ENDIF()

IF(UNIX)
    ADD_DEFINITIONS(-DSOL -fPIC)
    MESSAGE(STATUS "Building SOL")
ELSE()
    ADD_DEFINITIONS(-DDLL)
    MESSAGE(STATUS "Building DLL")
ENDIF()

FILE(GLOB_RECURSE CPP_FILES ./ *.c)

ADD_LIBRARY(epanet2 SHARED ${CPP_FILES})
TARGET_LINK_LIBRARIES(epanet2 ${LINKLIBS})
INSTALL(TARGETS epanet2 DESTINATION lib)

IF(${CLE})
    ADD_DEFINITIONS(-DCLE)
    SET(${TESTING} OFF)
    REMOVE_DEFINITIONS(-DTESTING)
ENDIF()

IF(${TESTING})
    ADD_DEFINITIONS(-DTESTING)
    SET(${CLE} OFF)
    REMOVE_DEFINITIONS(-DCLE)
ENDIF()


IF(${CLE} OR ${TESTING})
    ADD_EXECUTABLE(Ep2 ${CPP_FILES})
    TARGET_LINK_LIBRARIES(Ep2 ${LINKLIBS})
    INSTALL(TARGETS Ep2 DESTINATION bin)
    MESSAGE(STATUS "Building executable")
ELSE()
    MESSAGE(STATUS "Type \"cmake -DCLE=ON [path]\" to build an Epanet executable")
    MESSAGE(STATUS "Type \"cmake -DTESTING=ON [path]\" to build a testing main function")
ENDIF()
